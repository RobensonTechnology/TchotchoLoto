
@model TchotchoLoto.Models.Compagnie


<div class="modal-content">
    <div class="modal-header" style="background-color: #0078d7; border-radius:5px 5px 0 0;">

        <h4 style="display: inline;">Edit Company</h4>

        <button type="button" class="close" data-dismiss="modal">&times;</button>

    </div>
    <div class="modal-body row" style="padding:3%;">

        @using (Html.BeginForm("_Index", "Compagnies", FormMethod.Post, htmlAttributes: new { id = "Edit-Compagnie-Form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.CompagnieId, htmlAttributes: new { @class = "id-resetable" })

            <div class="form">



                <div class="form-group col-lg-3 col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.NomCompagnie, "Company Name", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NomCompagnie, new { htmlAttributes = new { @class = "form-control editor-resetable" } })
                </div>



                <div class="form-group col-lg-3 col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.PersonneResponsable, "Responsible Person", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PersonneResponsable, new { htmlAttributes = new { @class = "form-control editor-resetable" } })
                </div>

                <div class="form-group col-lg-3 col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.Adresse, "Adress", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Adresse, new { htmlAttributes = new { @class = "form-control editor-resetable" } })
                </div>



                <div class="form-group col-lg-3 col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Telephone1, "Telephone I", htmlAttributes: new { @class = "control-label" })

                    <span>
                        @Html.EditorFor(model => model.Telephone1, new { htmlAttributes = new { @class = "form-control editor-resetable", style = "padding-right: 25px;" } })
                        <span class="glyphicon glyphicon-plus show-phone-2"></span>
                    </span>

                    <div class="form-group" id="phone-2" style="display:none;">
                        @Html.EditorFor(model => model.Telephone2, new { htmlAttributes = new { @class = "form-control editor-resetable", placeholder = "Telephone II" } })
                    </div>

                </div>

                <div class="form-group col-lg-3 col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Latitude, "Latitude", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control editor-resetable" } })
                </div>

                <div class="form-group col-lg-3 col-md-6 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Longitude, "Longitude", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control editor-resetable" } })
                </div>

                <div class="form-group col-lg-3 col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.NIF, "Nif", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control editor-resetable" } })
                </div>

                <div class="form-group col-lg-3 col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.AdresseElectronique, "Email Company", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.AdresseElectronique, new { htmlAttributes = new { @class = "form-control editor-resetable" } })
                </div>

                <div class="form-group col-lg-3 col-md-6 col-sm-12">
                    @Html.LabelFor(model => model.PasswordEmail, "Password Email Company", htmlAttributes: new { @class = "control-label" })
                    @{
                        var password = new TchotchoLoto.Controllers.AccountController().Decrypt(Model.PasswordEmail);
                    }

                    <input type="text" class="form-control editor-resetable" name="PasswordEmail" value="@password">
                </div>



                <div class="form-group col-lg-3 col-md-6 col-sm-12 col-xs-12">
                    <label class="control-label pull-left">Company Logo</label>
                    <input type="file" name="LogoCompagnie" , id="LogoCompagnie" class="form-control editor-resetable" />
                </div>


                <div class="form-group col-lg-3 col-md-6 col-sm-12 col-xs-12" style="height:40%;" id="LogoCompagnie-photo-preview">

                    @if (Model.LogoCompagnie != null)
                    {
                        <img src="data:image/png;base64, @Convert.ToBase64String(Model.LogoCompagnie, 0, Model.LogoCompagnie.Length)" class="glyphicon" alt="Red dot" width="80" height="80" />


                    }
                    else
                    {
                        <img src="data:image/png;base64, @ViewBag.LogoCompagnie" />


                    }



                </div>



                <div class="form-group col-lg-3 col-md-6 col-sm-12 col-xs-12">
                    <label class="control-label pull-left">Responsible Signature</label>
                    <input type="file" name="SignatureResponsable" , id="SignatureResponsable" class="form-control editor-resetable" />
                </div>


                <div class="form-group col-lg-3 col-md-6 col-sm-12 col-xs-12" style="height:40%;" id="SignatureResponsable-photo-preview">

                    @if (Model.SignatureResponsable != null)
                    {
                        <img src="data:image/png;base64, @Convert.ToBase64String(Model.SignatureResponsable, 0, Model.SignatureResponsable.Length)" class="glyphicon" alt="Red dot" width="80" height="80" />
                    }
                    else
                    {
                        <img src="data:image/png;base64, @ViewBag.SignatureResponsable" />


                    }



                </div>



            </div>

            <div class="col-md-12 col-sm-12 col-xs-12" style="border-top:1px solid #d7d7d7; padding-top:10px; text-align:right;">

                <button type="submit" class="btn btn-sm btn-info submit"><span class="glyphicon glyphicon-save-file"></span> Save <span class="glyphicon glyphicon-refresh loader" style="display:none;"></span> </button>
                <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Close</button>

            </div>

        }

    </div>

</div>








